@using Blazor.Diagrams.Components
@using Blazor.Diagrams.Components.Widgets
@using Microsoft.AspNetCore.Components.Web
@using MudBlazor
@using Bb.PropertyGrid

<MudPaper Height="10" Elevation="25">
    <MudToolBar WrapContent="true" Style="align-items: baseline;">

        <MudTooltip Text="@ComponentConstants.Save.Translate(this)" Color="Color.Default">

            <MudIconButton Size="Size.Small"
                           Class="mr-5"
                           Icon="@Icons.Material.Filled.Save"
                           Color="MudBlazor.Color.Inherit"
                           OnClick="Save" />
        </MudTooltip>

        <MudStack Style="width: 80px;padding-left:10px">
            <MudTooltip Text="@ComponentConstants.Zoom.Translate(this)" Color="Color.Default">
                <MudNumericField @bind-Value="@_zoomValue"
                                 Variant="Variant.Text"
                                 Min="0"
                                 Max="300"
                                 Step="20"
                                 TextChanged="@_zoomTextChanged" />
            </MudTooltip>
        </MudStack>

        <MudStack Style="width: 80px;padding-left:10px">
            <MudTooltip Text="@ComponentConstants.GridSize.Translate(this)" Color="Color.Default">
                <MudNumericField @bind-Value="@_gridSizeValue"
                                 Variant="Variant.Text"
                                 Min="0"
                                 Max="200"
                                 Step="5"
                                 TextChanged="@_gridSizeUpTextChanged" />
            </MudTooltip>
        </MudStack>


        <MudTooltip Text="@ComponentConstants.ShowGrid.Translate(this)" Color="Color.Default">
            <MudToggleIconButton @bind-Toggled="_showGrid"
                                 Icon="@Icons.Material.Filled.GridOn"
                                 ToggledIcon="@Icons.Material.Filled.GridOff"
                                 onclick="@_gridShowChanged" />
        </MudTooltip>

        <MudTooltip Text="@ComponentConstants.GridMode.Translate(this)" Color="Color.Default">
            <MudToggleIconButton @bind-Toggled="_showPoint"
                                 Icon="@Icons.Material.Filled.DragIndicator"
                                 ToggledIcon="@Icons.Material.Filled.Grid4x4"
                                 onclick="@_gridModeChanged" />
        </MudTooltip>

        <MudTooltip Text="@ComponentConstants.Undo.Translate(this)" Color="Color.Default">
            <MudMenu StartIcon="@Icons.Material.Filled.Undo" EndIcon="@IconUndo" Disabled="@DisabledUndo">
                @foreach (var item in this.UndoList)
                {
                    <MudMenuItem OnClick="@((e) => OnRestoreUndo(e, item))">@item.Label</MudMenuItem>
                }
            </MudMenu>
        </MudTooltip>

        <MudTooltip Text="@ComponentConstants.Redo.Translate(this)" Color="Color.Default">
            <MudMenu StartIcon="@Icons.Material.Filled.Redo" EndIcon="@IconRedo" Disabled="@DisabledRedo">
                @foreach (var item in this.RedoList)
                {
                    <MudMenuItem OnClick="@((e) => OnRestoreRedo(e, item))">@item.Label</MudMenuItem>
                }
            </MudMenu>
        </MudTooltip>


    </MudToolBar>
</MudPaper>

<div class="full-size diagram-container dropzone @dropClass"
     ondrop="@((DragEventArgs args)=>{HandleDrop(args);})"
     ondragover="event.preventDefault();"
     ondragenter="@HandleDragEnter"
     ondragleave="@HandleDragLeave">

    <CascadingValue Value="UIDiagram" IsFixed="true">
        <DiagramCanvas Class="flex-grow">

            <Widgets>

                <NavigatorWidget Width="200"
                                 Height="120"
                                 UseNodeShape="false"
                                 Class="border border-black bg-white absolute"
                                 Style="bottom: 15px; right: 15px;">

                </NavigatorWidget>

                @if (_showGrid)
                {
                    <GridWidget Size="@_gridSizeValue"
                                Mode="@_gridMode"
                                BackgroundColor="white" />
                }

                <SelectionBoxWidget />

            </Widgets>

        </DiagramCanvas>
    </CascadingValue>
</div>

<MudExpansionPanels>
    <MudExpansionPanel @ref=ExpansionDiagnostic Dense="true">
        <MudSimpleTable>
            <thead>
                <tr>
                    <th>Level</th>
                    <th>Description</th>
                    <th>Source</th>
                </tr>
            </thead>
            <tbody>
                @if (Diagnostics != null)
                    @foreach (var row in Diagnostics)
                    {
                        <DiagnosticRow Row="@row" PropertyGridView="PropertyGrid" />
                    }
            </tbody>

        </MudSimpleTable>
    </MudExpansionPanel>
</MudExpansionPanels>

